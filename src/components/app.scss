// @charset "utf-8";

// Import a Google Font
// @import url('https://fonts.googleapis.com/css?family=Nunito:400,700');

// Set your brand colors
// $purple: #8a4d76;
// $pink: #fa7c91;
// $brown: #757763;
// $beige-light: #d0d1cd;
// $beige-lighter: #eff0eb;

// Update Bulma's global variables
// $family-sans-serif: 'Nunito', sans-serif;
// $grey-dark: $brown;
// $grey-light: $beige-light;
// $primary: $purple;
// $link: $pink;
// $widescreen-enabled: false;
// $fullhd-enabled: false;

// Update some of Bulma's component variables
// $body-background-color: $beige-lighter;
// $control-border-width: 2px;
// $input-border-color: transparent;
// $input-shadow: none;

// Import only what you need from Bulma
// @import '../node_modules/bulma/sass/utilities/_all.sass';
// @import '../node_modules/bulma/sass/base/_all.sass';
// @import '../node_modules/bulma/sass/elements/button.sass';
// @import '../node_modules/bulma/sass/elements/container.sass';
// @import '../node_modules/bulma/sass/elements/form.sass';
// @import '../node_modules/bulma/sass/elements/title.sass';
// @import '../node_modules/bulma/sass/components/navbar.sass';
// @import '../node_modules/bulma/sass/layout/hero.sass';
// @import '../node_modules/bulma/sass/layout/section.sass';


// BOARD 

$green: #71e571;
$pink: #ff64d1;

// basic example: http://codepen.io/una/pen/xVOpRr

// all of the cases
:checked + :checked + :checked ~ .message--x:after,
:checked + :not(:checked) + :not(:checked) + :checked + :not(:checked) + :not(:checked) + :checked ~ .message--x:after,
:not(:checked) + :checked + :not(:checked) + :not(:checked) + :checked + :not(:checked) + :not(:checked) + :checked ~ .message--x:after,
:not(:checked) + :checked + :not(:checked) + :not(:checked) + :checked + :not(:checked) + :not(:checked) + :checked ~ .message--x:after,
:not(:checked) + :not(:checked) + :checked + :not(:checked) + :checked + :not(:checked) + :checked ~ .message--x:after,
:checked + :not(:checked) + :not(:checked) + :not(:checked) + :checked + :not(:checked) + :not(:checked) + :not(:checked)+ :checked ~ .message--x:after,
{
  @extend %win-message;
  content: "X Wins!";
  background: $pink;
}

// O cases

:checked + :checked + :checked ~ .message--o:after,
:checked + :not(:checked) + :not(:checked) + :checked + :not(:checked) + :not(:checked) + :checked ~ .message--o:after,
:not(:checked) + :checked + :not(:checked) + :not(:checked) + :checked + :not(:checked) + :not(:checked) + :checked ~ .message--o:after,
:not(:checked) + :checked + :not(:checked) + :not(:checked) + :checked + :not(:checked) + :not(:checked) + :checked ~ .message--o:after,
:not(:checked) + :not(:checked) + :checked + :not(:checked) + :checked + :not(:checked) + :checked ~ .message--o:after,
:checked + :not(:checked) + :not(:checked) + :not(:checked) + :checked + :not(:checked) + :not(:checked) + :not(:checked)+ :checked ~ .message--o:after,
{
  @extend %win-message;
  content: "O Wins!";
  background: $green;
}

%win-message {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 100%;
  z-index: 10;
  font-size: 3em;
  line-height: 5.3;
  font-weight: 800;
}

// once it's checked you can't uncheck it
:checked {
  pointer-events: none;
}

.team--x {
  counter-reset: count-x;
}

.team--o {
  counter-reset: count-o;
}

.team--x :checked {
  counter-increment: count-x;
}

.team--o :checked {
  counter-increment: count-o;
}

.total-count--x::after {
  content: counter(count-x);
}

.total-count--o::after {
  content: counter(count-o);
}

// boxes overlap
.team--x,
.team--o {
  position: absolute;
  top: 0;
  left: 0;
}

// just page styling:

// styling the checks

$box-size: 8em;

.tttsquare {
  border: none;
  display: block;
  float: left;
  margin: 0;
  background-color: none;
  appearance: none;
  width: $box-size;
  height: $box-size;
  
  .team--x & {
    outline: 1px solid $pink;
  }

  .team--o & {
    outline: 1px solid $green;
  }
}

.gameboard {
  display: block;
  position: absolute;
  width: $box-size*3.25;
  margin: 1.5em auto;
  left: 0;
  right: 0;
}

:checked {
  &:after {
    line-height: .75;
    font-size: $box-size;
    text-align: center;
    width: 1em;
    height: 1em;
    display: block;
    
    .team--x & {
      background-color: $pink;
      content: 'x';
    }
    
    .team--o & {
      background-color: $green;
      content: 'o';
    }
  }
}

// Animating a Set-Timeout for Turn switching

@keyframes turn-switcher {
  0% {
    z-index: 1;
    pointer-events: none;
  }
  1% {
    z-index: -1;
    pointer-events: all;
  }
}

// applying the animation:
.team--x {
  animation: turn-switcher 10s forwards linear infinite;
  animation-delay: 5s;
}